#include<stdio.h>
#include<math.h>

int garden[20];

int main()
{
    int n, i, j;
    void sprinkler(int row, int n);
    scanf("%d", &n);
    sprinkler(1, n);
    return 0;
}

//function for printing the solution
void print(int n)
{
    int i, j;

    for (i = 1; i <= n; ++i)
    {
        for (j = 1; j <= n; ++j) //for nxn garden
        {
            if (garden[i] == j)
                printf("*"); //sprinkler at i,j position
            else
                printf("."); //empty slot
        }
        printf("\n");
    }
    printf("\n");
}

/*function to check conflicts
If no conflict for desired postion returns 1 otherwise returns 0*/
int place(int row, int column)
{
    int i;
    for (i = 1; i <= row - 1; ++i)
    {
        //checking column and diagonal conflicts
        if (garden[i] == column)
            return 0;
        else
            if (abs(garden[i] - column) == abs(i - row))
                return 0;
    }

    return 1; //no conflicts
}

//function to check for proper positioning of sprinkler
void sprinkler(int row, int n)
{
    int column;
    for (column = 1; column <= n; ++column)
    {
        if (place(row, column))
        {
            garden[row] = column; //no conflicts so place sprinkler
            if (row == n) //dead end
                print(n); //printing the garden configuration
            else //try sprinkler with next position
                sprinkler(row + 1, n);
        }
    }
}


